from telethon import TelegramClient, events

# ƒêi·ªÅn th√¥ng tin API b·∫°n t·∫°o ·ªü my.telegram.org/apps
api_id = 22534620  # <-- Thay b·∫±ng API_ID c·ªßa b·∫°n
api_hash = 'b07d6de2c7647072120e274b9c71a214'  # <-- Thay b·∫±ng API_HASH c·ªßa b·∫°n

# T√™n file session (gi·ªØ ƒëƒÉng nh·∫≠p)
session_name = 'session'

client = TelegramClient(session_name, api_id, api_hash)

@client.on(events.NewMessage(pattern='/menu'))
async def menu(event):
    menu_text = """üìã *Menu t√≠nh nƒÉng*
/levea - R·ªùi nh√≥m
/admin - Xem admin bot
/muteuse - Mute user
/unmuteuse - Unmute user
/checkad - Check admin nh√≥m
/checkgr - Check th√¥ng tin nh√≥m
/gemini - Gemini
/resetgemini - Reset l·ªãch s·ª≠ gemini
/dich - D·ªãch ng√¥n ng·ªØ
/menu - Hi·ªÉn th·ªã menu n√†y
"""
    await event.reply(menu_text)

@client.on(events.NewMessage(pattern='/levea'))
async def leave_group(event):
    if event.is_group:
        await event.reply("T·∫°m bi·ªát m·ªçi ng∆∞·ªùi!")
        await client.kick_participant(event.chat_id, 'me')

import requests
from telethon import events

@client.on(events.NewMessage(pattern='/gemini'))
async def gemini_ask(event):
    try:
        # L·∫•y n·ªôi dung ng∆∞·ªùi d√πng g·ª≠i sau l·ªánh /gemini
        user_text = event.raw_text.split(' ', 1)
        if len(user_text) < 2:
            await event.reply("B·∫°n c·∫ßn nh·∫≠p n·ªôi dung sau /gemini")
            return
        question = user_text[1]

        # G·ªçi API
        url = f"https://dichvukey.site/apishare/hoi.php?text={question}"
        response = requests.get(url)
        if response.status_code == 200:
            answer = response.text
            await event.reply(f"**Tr·∫£ l·ªùi:**\n{answer}")
        else:
            await event.reply("API l·ªói, vui l√≤ng th·ª≠ l·∫°i sau.")
    except Exception as e:
        await event.reply(f"L·ªói: {str(e)}")


@client.on(events.NewMessage(pattern='/admin'))
async def admin_info(event):
    me = await client.get_me()
    await event.reply(f"Admin hi·ªán t·∫°i: {me.first_name} (ID: {me.id})")

# C√°c l·ªánh kh√°c b·∫°n c√≥ th·ªÉ t·ª± th√™m d·ª±a v√†o m·∫´u tr√™n

print("Bot ƒëang ch·∫°y...")
client.start()
client.run_until_disconnected()
